
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples\lemon_example.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_lemon_example.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_lemon_example.py:


======================
LEMON dataset example
======================

This example illustrates the use of ``sovabids`` on the `LEMON dataset <http://fcon_1000.projects.nitrc.org/indi/retro/MPI_LEMON.html>`_
using the python API.

The main elements of this example are:
    * A source path with the original dataset.
    * A bids path that will be the output path of the conversion.
    * A rules file that configures how the conversion is done.
    * A mapping file that encodes how the conversion is performed to each individual file of the dataset.

.. mermaid::

    graph LR
        S>"Source path"]
        B>"Bids path"]
        R>"Rules file"]
        AR(("Apply Rules"))
        M>"Mappings file"]
        CT(("Convert Them"))
        O[("Converted dataset")]
        S --> AR
        B --> AR
        R --> AR
        AR --> M
        M --> CT
        CT --> O

.. GENERATED FROM PYTHON SOURCE LINES 35-38

Imports
-------
First we import some functions we will need:

.. GENERATED FROM PYTHON SOURCE LINES 38-48

.. code-block:: default


    import os # For path manipulation
    import shutil # File manipulation
    from mne_bids import print_dir_tree # To show the input/output directories structures inside this example
    from sovabids.utils import get_project_dir # Getting a directory to get the dataset files
    from sovabids.rules import apply_rules # Apply rules for conversion
    import yaml # Just to print the rules in the example
    from sovabids.convert import convert_them # Do the conversion
    from sovabids.datasets import lemon_prepare # Download the dataset








.. GENERATED FROM PYTHON SOURCE LINES 49-56

Getting and preparing the dataset
---------------------------------
We have to download and decompress the dataset. We also need to fix a filename inconsistency
(without this correction the file won't be able to be opened in mne). Luckily all of that is 
encapsulated in the lemon_prepare.py function since these issues are not properly of sovabids. 

By default the files are saved in the '_data' directory of the sovabids project.

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: default

    lemon_prepare()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading sub-032301.tar.gz at y:\code\sovabids\_data\lemon
    WARNING: File already existed. Skipping...
    Downloading sub-032302.tar.gz at y:\code\sovabids\_data\lemon
    WARNING: File already existed. Skipping...
    Downloading sub-032303.tar.gz at y:\code\sovabids\_data\lemon
    WARNING: File already existed. Skipping...
    Downloading name_match.csv at y:\code\sovabids\_data\lemon
    WARNING: File already existed. Skipping...




.. GENERATED FROM PYTHON SOURCE LINES 59-64

Setting up the paths
--------------------
Now we will set up four paths. Because this example is intended to run relative 
to the repository directory we use relative path but for real use-cases it is 
easier to just input the absolute-path. We will print these paths for more clarity.

.. GENERATED FROM PYTHON SOURCE LINES 64-75

.. code-block:: default


    source_path = os.path.abspath(os.path.join(get_project_dir(),'_data','lemon')) # For the input data we will convert
    bids_root= os.path.abspath(os.path.join(get_project_dir(),'_data','lemon_bids')) # The output directory that will have the converted data
    rules_path = os.path.join(get_project_dir(),'examples','lemon_example_rules.yml') # The rules file that setups the rule for conversion
    mapping_path = os.path.join(bids_root,'code','sovabids','mappings.yml') # The mapping file that will hold the results of applying the rules to each file

    print('source_path:',source_path)
    print('bids_root:', bids_root)
    print('rules_path:',rules_path)
    print('mapping_path:',mapping_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    source_path: y:\code\sovabids\_data\lemon
    bids_root: y:\code\sovabids\_data\lemon_bids
    rules_path: y:\code\sovabids\examples\lemon_example_rules.yml
    mapping_path: y:\code\sovabids\_data\lemon_bids\code\sovabids\mappings.yml




.. GENERATED FROM PYTHON SOURCE LINES 76-79

Cleaning the output directory
-----------------------------
We will clean the output path as a safety measure from previous conversions.

.. GENERATED FROM PYTHON SOURCE LINES 79-85

.. code-block:: default


    try:
        shutil.rmtree(bids_root)
    except:
        pass








.. GENERATED FROM PYTHON SOURCE LINES 86-89

The input directory
-------------------
For clarity purposes we will print here the directory we are trying to convert to BIDS.

.. GENERATED FROM PYTHON SOURCE LINES 89-92

.. code-block:: default


    print_dir_tree(source_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    |lemon\
    |--- name_match.csv
    |--- sub-032301.tar.gz
    |--- sub-032302.tar.gz
    |--- sub-032303.tar.gz
    |--- sub-010002\
    |------ RSEEG\
    |--------- sub-010002.eeg
    |--------- sub-010002.vhdr
    |--------- sub-010002.vmrk
    |--- sub-010003\
    |------ RSEEG\
    |--------- sub-010003.eeg
    |--------- sub-010003.vhdr
    |--------- sub-010003.vmrk
    |--- sub-010004\
    |------ RSEEG\
    |--------- sub-010004.eeg
    |--------- sub-010004.vhdr
    |--------- sub-010004.vmrk




.. GENERATED FROM PYTHON SOURCE LINES 93-129

Making the rules
----------------
The most important and complicated part of this is making the rules file, 
either by hand or by the "DISCOVER_RULES" module (which is not yet implemented).

To do it by hand we need to understand the schema of the file. For starts, 
the file is written in yaml. As of now the purpose of this example is not to teach yaml 
(we may have a dedicated file for that in the future). You can check this `link <https://www.cloudbees.com/blog/yaml-tutorial-everything-you-need-get-started>`_ though.

sovabids works with setting up (the currently supported) parts of bids.

The bids eeg specification setups mainly 6 files:
   - dataset_description
   - sidecar
   - channels
   - electrodes
   - coordinate system
   - events

The currently supported files are: 
   - dataset_description : https://bids-specification.readthedocs.io/en/stable/03-modality-agnostic-files.html#dataset_descriptionjson
   - sidecar : https://bids-specification.readthedocs.io/en/stable/04-modality-specific-files/03-electroencephalography.html#sidecar-json-_eegjson
   - channels : https://bids-specification.readthedocs.io/en/stable/04-modality-specific-files/03-electroencephalography.html#channels-description-_channelstsv

For each of these files, the yaml will have an object with its corresponding "child" properties.

Besides these "file" objects, the yaml will have an "entities" object.
Although it seems a bit obscure, "entities" is just the name bids gives to the properties that affect file name structure.
More info at: https://bids-specification.readthedocs.io/en/stable/02-common-principles.html#file-name-structure
In essence the "entities" object holds information that triangulates the file 
in the study (subject,session,task,acquisition,run).

At last, we have the "non-bids" object which setups additional configuration that do not clearly belong to one of the previous objects.

This part is already done for you, but for clarification here are the rules 
we are applying. Please read the following as the yaml documents itself.

.. GENERATED FROM PYTHON SOURCE LINES 129-134

.. code-block:: default


    with open(rules_path,encoding="utf-8") as f:
        rules = f.read()
        print(rules)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    # For this lemon dataset we dont need session,acquisition nor run. The task is constant for all subjects (resting). 
    # Now, the subject key holds the label of the subject. Since this varies from subject to subject we won't set that value as general. 
    # How we will do it then? you may ask... Well, we will infer that from the filename in the non-bids object. 
    # So in the end we will just set the task information in the entities object.

    entities:                                       # Configuring the file name structure of bids
      task : resting                                # Setting the task of all files to a fixed string

                                                    # Notice the indentation. Each level are 2 spaces here.

    dataset_description:                            # Configuring the dataset_description.json file
                                                    # Note that "BIDSVersion" which is a REQUIRED field of the dataset_description file
                                                    # is automatically set up by mne-bids, so we dont put it here in the rules.
      Name : Lemon                                  # Name of the dataset, set up as a fixed string
      Authors:                                      # Here I put the personnel involved in the acquisition of the dataset
        - Anahit Babayan                            # See http://fcon_1000.projects.nitrc.org/indi/retro/MPI_LEMON.html
        - Miray Erbey                               # Notice the "-", it is a list
        - Deniz Kumral
        - Janis D. Reinelt
        - Andrea M. F. Reiter
        - Josefin RÃ¶bbig
        - H. Lina Schaare
        - Marie Uhlig
        - Alfred Anwander
        - Pierre-Louis Bazin
        - Annette Horstmann
        - Leonie Lampe
        - Vadim V. Nikulin
        - Hadas Okon-Singer
        - Sven Preusser
        - AndrÃ© Pampel
        - Christiane S. Rohr
        - Julia Sacher1
        - Angelika ThÃ¶ne-Otto
        - Sabrina Trapp
        - Till Nierhaus
        - Denise Altmann
        - Katrin Arelin
        - Maria BlÃ¶chl
        - Edith Bongartz
        - Patric Breig
        - Elena Cesnaite
        - Sufang Chen
        - Roberto Cozatl
        - Saskia Czerwonatis
        - Gabriele Dambrauskaite
        - Maria Dreyer
        - Jessica Enders
        - Melina Engelhardt
        - Marie Michele Fischer
        - Norman Forschack
        - Johannes Golchert
        - Laura Golz
        - C. Alexandrina Guran
        - Susanna Hedrich
        - Nicole Hentschel
        - Daria I. Hoffmann
        - Julia M. Huntenburg
        - Rebecca Jost
        - Anna Kosatschek
        - Stella Kunzendorf
        - Hannah Lammers
        - Mark E. Lauckner
        - Keyvan Mahjoory
        - Natacha Mendes
        - Ramona Menger
        - Enzo Morino
        - Karina NÃ¤the
        - Jennifer Neubauer
        - Handan Noyan
        - Sabine OligschlÃ¤ger
        - Patricia Panczyszyn-Trzewik
        - Dorothee Poehlchen
        - Nadine Putzke
        - Sabrina Roski
        - Marie-Catherine Schaller
        - Anja Schieferbein
        - Benito Schlaak
        - Hanna Maria Schmidt
        - Robert Schmidt
        - Anne Schrimpf
        - Sylvia Stasch
        - Maria Voss
        - Anett Wiedemann
        - Daniel S. Margulies
        - Michael Gaebler
        - Arno Villringer


    sidecar:                                        # Configuring the sidecar eeg file
      PowerLineFrequency : 50                       # Noted from the visual inspection of the eeg spectrum
      EEGReference : FCz                            # As mentioned in https://www.nature.com/articles/sdata2018308
                                                    # If you know about bids you may notice that the only field left 
                                                    # that is required is the "TaskName" one. Since this is taken care 
                                                    # by the "entities" object, we didn't include it on this one.

    channels:                                       # Configuring the channels tsv
                                                    # Channel information is mostly inferred by MNE upon reading the file 
                                                    # so usually you wouldn't need to set a rule for this. 
                                                    # Ideally the types read by mne are correct. 
                                                    # In this dataset all channel types are correctly inferred by mne except for the ocular one. 
                                                    # We will overwrite this mistake with the correct type as follows.
      type :                                        # This property allow us to overwrite channel types inferred by MNE
        VEOG : VEOG                                 # Here the syntax is <channel name> : <channel type according to bids notation>
                                                    # For the valid types see https://bids-specification.readthedocs.io/en/stable/04-modality-specific-files/03-electroencephalography.html#channels-description-_channelstsv
                                                    # Notice white-space separating key and value is important
                                                    # Notice it is not a list, but a set of object following the syntax said above
        F3 : EEG                                    # Here we set the type of F3, it was already correctly inferred by mne but it is included to illustrate retyping of various channels.
    non-bids:                                       # Additional configuration not belonging specifically to any of the previous objects
      eeg_extension : .vhdr                         # Sets which extension to read as an eeg file
      path_analysis:                                # Some bids properties can be inferred from the path of the source files
                                                    # Put the path pattern with the bids-properties as they are notated in this yaml. Use dot notation for nesting.
        pattern : RSEEG/sub-%entities.subject%.vhdr # For example here we extract from the path the "subject" child of the "entities" object
      code_execution:                               # To manipulate the raw mne object for further changes, this is power-user territory
                                                    # Notice it is a list of python lines acting on the "raw" object of mne
        - print(raw.info)                           # For illustration purposes here we just print the info attribute of the raw mne object.





.. GENERATED FROM PYTHON SOURCE LINES 135-140

Applying the rules
------------------
We apply the rules to the input dataset by giving the input,ouput,rules, and mapping paths to the apply_rules function.
This will produce by default a 'mappings.yml' file at the specified directory of 'bids_root/code/sovabids'.
This file holds the result of applying the rules to each of the dataset files.

.. GENERATED FROM PYTHON SOURCE LINES 140-142

.. code-block:: default

    apply_rules(source_path,bids_root,rules_path,mapping_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <Info | 8 non-empty values
     bads: []
     ch_names: Fp1, Fp2, F7, F3, Fz, F4, F8, FC5, FC1, FC2, FC6, T7, C3, Cz, ...
     chs: 62 EEG
     custom_ref_applied: False
     highpass: 0.0 Hz
     line_freq: 50
     lowpass: 1000.0 Hz
     meas_date: 2013-11-11 13:47:40 UTC
     nchan: 62
     projs: []
     sfreq: 2500.0 Hz
    >
    <Info | 8 non-empty values
     bads: []
     ch_names: Fp1, Fp2, F7, F3, Fz, F4, F8, FC5, FC1, FC2, FC6, T7, C3, Cz, ...
     chs: 62 EEG
     custom_ref_applied: False
     highpass: 0.0 Hz
     line_freq: 50
     lowpass: 1000.0 Hz
     meas_date: 2013-09-10 10:58:55 UTC
     nchan: 62
     projs: []
     sfreq: 2500.0 Hz
    >
    <Info | 8 non-empty values
     bads: []
     ch_names: Fp1, Fp2, F7, F3, Fz, F4, F8, FC5, FC1, FC2, FC6, T7, C3, Cz, ...
     chs: 62 EEG
     custom_ref_applied: False
     highpass: 0.0 Hz
     line_freq: 50
     lowpass: 1000.0 Hz
     meas_date: 2013-11-15 13:54:17 UTC
     nchan: 62
     projs: []
     sfreq: 2500.0 Hz
    >
    Mapping file wrote to: y:\code\sovabids\_data\lemon_bids\code\sovabids\mappings.yml

    {'General': {'entities': {'task': 'resting'}, 'dataset_description': {'Name': 'Lemon', 'Authors': ['Anahit Babayan', 'Miray Erbey', 'Deniz Kumral', 'Janis D. Reinelt', 'Andrea M. F. Reiter', 'Josefin RÃ¶bbig', 'H. Lina Schaare', 'Marie Uhlig', 'Alfred Anwander', 'Pierre-Louis Bazin', 'Annette Horstmann', 'Leonie Lampe', 'Vadim V. Nikulin', 'Hadas Okon-Singer', 'Sven Preusser', 'AndrÃ© Pampel', 'Christiane S. Rohr', 'Julia Sacher1', 'Angelika ThÃ¶ne-Otto', 'Sabrina Trapp', 'Till Nierhaus', 'Denise Altmann', 'Katrin Arelin', 'Maria BlÃ¶chl', 'Edith Bongartz', 'Patric Breig', 'Elena Cesnaite', 'Sufang Chen', 'Roberto Cozatl', 'Saskia Czerwonatis', 'Gabriele Dambrauskaite', 'Maria Dreyer', 'Jessica Enders', 'Melina Engelhardt', 'Marie Michele Fischer', 'Norman Forschack', 'Johannes Golchert', 'Laura Golz', 'C. Alexandrina Guran', 'Susanna Hedrich', 'Nicole Hentschel', 'Daria I. Hoffmann', 'Julia M. Huntenburg', 'Rebecca Jost', 'Anna Kosatschek', 'Stella Kunzendorf', 'Hannah Lammers', 'Mark E. Lauckner', 'Keyvan Mahjoory', 'Natacha Mendes', 'Ramona Menger', 'Enzo Morino', 'Karina NÃ¤the', 'Jennifer Neubauer', 'Handan Noyan', 'Sabine OligschlÃ¤ger', 'Patricia Panczyszyn-Trzewik', 'Dorothee Poehlchen', 'Nadine Putzke', 'Sabrina Roski', 'Marie-Catherine Schaller', 'Anja Schieferbein', 'Benito Schlaak', 'Hanna Maria Schmidt', 'Robert Schmidt', 'Anne Schrimpf', 'Sylvia Stasch', 'Maria Voss', 'Anett Wiedemann', 'Daniel S. Margulies', 'Michael Gaebler', 'Arno Villringer']}, 'sidecar': {'PowerLineFrequency': 50, 'EEGReference': 'FCz'}, 'channels': {'type': {'VEOG': 'VEOG', 'F3': 'EEG'}}, 'non-bids': {'eeg_extension': '.vhdr', 'path_analysis': {'pattern': 'RSEEG/sub-%entities.subject%.vhdr'}, 'code_execution': ['print(raw.info)']}, 'IO': {'source': 'y:\\code\\sovabids\\_data\\lemon', 'target': 'y:\\code\\sovabids\\_data\\lemon_bids'}}, 'Individual': [{'channels': {'type': {'VEOG': 'VEOG', 'F3': 'EEG'}}, 'sidecar': {'PowerLineFrequency': 50, 'EEGReference': 'FCz'}, 'dataset_description': {'Name': 'Lemon', 'Authors': ['Anahit Babayan', 'Miray Erbey', 'Deniz Kumral', 'Janis D. Reinelt', 'Andrea M. F. Reiter', 'Josefin RÃ¶bbig', 'H. Lina Schaare', 'Marie Uhlig', 'Alfred Anwander', 'Pierre-Louis Bazin', 'Annette Horstmann', 'Leonie Lampe', 'Vadim V. Nikulin', 'Hadas Okon-Singer', 'Sven Preusser', 'AndrÃ© Pampel', 'Christiane S. Rohr', 'Julia Sacher1', 'Angelika ThÃ¶ne-Otto', 'Sabrina Trapp', 'Till Nierhaus', 'Denise Altmann', 'Katrin Arelin', 'Maria BlÃ¶chl', 'Edith Bongartz', 'Patric Breig', 'Elena Cesnaite', 'Sufang Chen', 'Roberto Cozatl', 'Saskia Czerwonatis', 'Gabriele Dambrauskaite', 'Maria Dreyer', 'Jessica Enders', 'Melina Engelhardt', 'Marie Michele Fischer', 'Norman Forschack', 'Johannes Golchert', 'Laura Golz', 'C. Alexandrina Guran', 'Susanna Hedrich', 'Nicole Hentschel', 'Daria I. Hoffmann', 'Julia M. Huntenburg', 'Rebecca Jost', 'Anna Kosatschek', 'Stella Kunzendorf', 'Hannah Lammers', 'Mark E. Lauckner', 'Keyvan Mahjoory', 'Natacha Mendes', 'Ramona Menger', 'Enzo Morino', 'Karina NÃ¤the', 'Jennifer Neubauer', 'Handan Noyan', 'Sabine OligschlÃ¤ger', 'Patricia Panczyszyn-Trzewik', 'Dorothee Poehlchen', 'Nadine Putzke', 'Sabrina Roski', 'Marie-Catherine Schaller', 'Anja Schieferbein', 'Benito Schlaak', 'Hanna Maria Schmidt', 'Robert Schmidt', 'Anne Schrimpf', 'Sylvia Stasch', 'Maria Voss', 'Anett Wiedemann', 'Daniel S. Margulies', 'Michael Gaebler', 'Arno Villringer']}, 'entities': {'subject': '010002', 'task': 'resting'}, 'non-bids': {'eeg_extension': '.vhdr', 'path_analysis': {'pattern': 'RSEEG/sub-%entities.subject%.vhdr'}, 'code_execution': ['print(raw.info)']}, 'IO': {'target': 'y:\\code\\sovabids\\_data\\lemon_bids\\sub-010002\\eeg\\sub-010002_task-resting_eeg.vhdr', 'source': 'y:\\code\\sovabids\\_data\\lemon\\sub-010002\\RSEEG\\sub-010002.vhdr'}}, {'channels': {'type': {'VEOG': 'VEOG', 'F3': 'EEG'}}, 'sidecar': {'PowerLineFrequency': 50, 'EEGReference': 'FCz'}, 'dataset_description': {'Name': 'Lemon', 'Authors': ['Anahit Babayan', 'Miray Erbey', 'Deniz Kumral', 'Janis D. Reinelt', 'Andrea M. F. Reiter', 'Josefin RÃ¶bbig', 'H. Lina Schaare', 'Marie Uhlig', 'Alfred Anwander', 'Pierre-Louis Bazin', 'Annette Horstmann', 'Leonie Lampe', 'Vadim V. Nikulin', 'Hadas Okon-Singer', 'Sven Preusser', 'AndrÃ© Pampel', 'Christiane S. Rohr', 'Julia Sacher1', 'Angelika ThÃ¶ne-Otto', 'Sabrina Trapp', 'Till Nierhaus', 'Denise Altmann', 'Katrin Arelin', 'Maria BlÃ¶chl', 'Edith Bongartz', 'Patric Breig', 'Elena Cesnaite', 'Sufang Chen', 'Roberto Cozatl', 'Saskia Czerwonatis', 'Gabriele Dambrauskaite', 'Maria Dreyer', 'Jessica Enders', 'Melina Engelhardt', 'Marie Michele Fischer', 'Norman Forschack', 'Johannes Golchert', 'Laura Golz', 'C. Alexandrina Guran', 'Susanna Hedrich', 'Nicole Hentschel', 'Daria I. Hoffmann', 'Julia M. Huntenburg', 'Rebecca Jost', 'Anna Kosatschek', 'Stella Kunzendorf', 'Hannah Lammers', 'Mark E. Lauckner', 'Keyvan Mahjoory', 'Natacha Mendes', 'Ramona Menger', 'Enzo Morino', 'Karina NÃ¤the', 'Jennifer Neubauer', 'Handan Noyan', 'Sabine OligschlÃ¤ger', 'Patricia Panczyszyn-Trzewik', 'Dorothee Poehlchen', 'Nadine Putzke', 'Sabrina Roski', 'Marie-Catherine Schaller', 'Anja Schieferbein', 'Benito Schlaak', 'Hanna Maria Schmidt', 'Robert Schmidt', 'Anne Schrimpf', 'Sylvia Stasch', 'Maria Voss', 'Anett Wiedemann', 'Daniel S. Margulies', 'Michael Gaebler', 'Arno Villringer']}, 'entities': {'subject': '010003', 'task': 'resting'}, 'non-bids': {'eeg_extension': '.vhdr', 'path_analysis': {'pattern': 'RSEEG/sub-%entities.subject%.vhdr'}, 'code_execution': ['print(raw.info)']}, 'IO': {'target': 'y:\\code\\sovabids\\_data\\lemon_bids\\sub-010003\\eeg\\sub-010003_task-resting_eeg.vhdr', 'source': 'y:\\code\\sovabids\\_data\\lemon\\sub-010003\\RSEEG\\sub-010003.vhdr'}}, {'channels': {'type': {'VEOG': 'VEOG', 'F3': 'EEG'}}, 'sidecar': {'PowerLineFrequency': 50, 'EEGReference': 'FCz'}, 'dataset_description': {'Name': 'Lemon', 'Authors': ['Anahit Babayan', 'Miray Erbey', 'Deniz Kumral', 'Janis D. Reinelt', 'Andrea M. F. Reiter', 'Josefin RÃ¶bbig', 'H. Lina Schaare', 'Marie Uhlig', 'Alfred Anwander', 'Pierre-Louis Bazin', 'Annette Horstmann', 'Leonie Lampe', 'Vadim V. Nikulin', 'Hadas Okon-Singer', 'Sven Preusser', 'AndrÃ© Pampel', 'Christiane S. Rohr', 'Julia Sacher1', 'Angelika ThÃ¶ne-Otto', 'Sabrina Trapp', 'Till Nierhaus', 'Denise Altmann', 'Katrin Arelin', 'Maria BlÃ¶chl', 'Edith Bongartz', 'Patric Breig', 'Elena Cesnaite', 'Sufang Chen', 'Roberto Cozatl', 'Saskia Czerwonatis', 'Gabriele Dambrauskaite', 'Maria Dreyer', 'Jessica Enders', 'Melina Engelhardt', 'Marie Michele Fischer', 'Norman Forschack', 'Johannes Golchert', 'Laura Golz', 'C. Alexandrina Guran', 'Susanna Hedrich', 'Nicole Hentschel', 'Daria I. Hoffmann', 'Julia M. Huntenburg', 'Rebecca Jost', 'Anna Kosatschek', 'Stella Kunzendorf', 'Hannah Lammers', 'Mark E. Lauckner', 'Keyvan Mahjoory', 'Natacha Mendes', 'Ramona Menger', 'Enzo Morino', 'Karina NÃ¤the', 'Jennifer Neubauer', 'Handan Noyan', 'Sabine OligschlÃ¤ger', 'Patricia Panczyszyn-Trzewik', 'Dorothee Poehlchen', 'Nadine Putzke', 'Sabrina Roski', 'Marie-Catherine Schaller', 'Anja Schieferbein', 'Benito Schlaak', 'Hanna Maria Schmidt', 'Robert Schmidt', 'Anne Schrimpf', 'Sylvia Stasch', 'Maria Voss', 'Anett Wiedemann', 'Daniel S. Margulies', 'Michael Gaebler', 'Arno Villringer']}, 'entities': {'subject': '010004', 'task': 'resting'}, 'non-bids': {'eeg_extension': '.vhdr', 'path_analysis': {'pattern': 'RSEEG/sub-%entities.subject%.vhdr'}, 'code_execution': ['print(raw.info)']}, 'IO': {'target': 'y:\\code\\sovabids\\_data\\lemon_bids\\sub-010004\\eeg\\sub-010004_task-resting_eeg.vhdr', 'source': 'y:\\code\\sovabids\\_data\\lemon\\sub-010004\\RSEEG\\sub-010004.vhdr'}}]}



.. GENERATED FROM PYTHON SOURCE LINES 143-146

Doing the conversion
--------------------
We now do the conversion of the dataset by reading the mapping file ('mappings.yml') with the convert them module.

.. GENERATED FROM PYTHON SOURCE LINES 146-148

.. code-block:: default

    convert_them(mapping_path)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    <Info | 8 non-empty values
     bads: []
     ch_names: Fp1, Fp2, F7, F3, Fz, F4, F8, FC5, FC1, FC2, FC6, T7, C3, Cz, ...
     chs: 62 EEG
     custom_ref_applied: False
     highpass: 0.0 Hz
     line_freq: 50
     lowpass: 1000.0 Hz
     meas_date: 2013-11-11 13:47:40 UTC
     nchan: 62
     projs: []
     sfreq: 2500.0 Hz
    >

    Writing 'y:\code\sovabids\_data\lemon_bids\README'...

    References
    ----------
    Appelhoff, S., Sanderson, M., Brooks, T., Vliet, M., Quentin, R., Holdgraf, C., Chaumon, M., Mikulan, E., Tavabi, K., HÃ¶chenberger, R., Welke, D., Brunner, C., Rockhill, A., Larson, E., Gramfort, A. and Jas, M. (2019). MNE-BIDS: Organizing electrophysiological data into the BIDS format and facilitating their analysis. Journal of Open Source Software 4: (1896). https://doi.org/10.21105/joss.01896

    Pernet, C. R., Appelhoff, S., Gorgolewski, K. J., Flandin, G., Phillips, C., Delorme, A., Oostenveld, R. (2019). EEG-BIDS, an extension to the brain imaging data structure for electroencephalography. Scientific Data, 6, 103. https://doi.org/10.1038/s41597-019-0104-8


    Writing 'y:\code\sovabids\_data\lemon_bids\participants.tsv'...

    participant_id  age     sex     hand
    sub-010002      n/a     n/a     n/a

    Writing 'y:\code\sovabids\_data\lemon_bids\participants.json'...

    {
        "participant_id": {
            "Description": "Unique participant identifier"
        },
        "age": {
            "Description": "Age of the participant at time of testing",
            "Units": "years"
        },
        "sex": {
            "Description": "Biological sex of the participant",
            "Levels": {
                "F": "female",
                "M": "male"
            }
        },
        "hand": {
            "Description": "Handedness of the participant",
            "Levels": {
                "R": "right",
                "L": "left",
                "A": "ambidextrous"
            }
        }
    }

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010002\eeg\sub-010002_task-resting_events.tsv'...

    onset   duration        trial_type      value   sample
    0.0     0.0004  New Segment/    2       0
    0.0     0.0004  Comment/no USB Connection to actiCAP    1       0
    3.9916  0.0004  Stimulus/S  1   3       9979
    6.3752  0.0004  Stimulus/S  1   3       15938
    6.3848  0.0004  Stimulus/S210   5       15962

    Writing 'y:\code\sovabids\_data\lemon_bids\dataset_description.json'...

    {
        "Name": " ",
        "BIDSVersion": "1.4.0",
        "DatasetType": "raw",
        "Authors": [
            "Please cite MNE-BIDS in your publication before removing this (citations in README)"
        ]
    }

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010002\eeg\sub-010002_task-resting_eeg.json'...

    {
        "TaskName": "resting",
        "Manufacturer": "BrainProducts",
        "PowerLineFrequency": 50,
        "SamplingFrequency": 2500.0,
        "SoftwareFilters": "n/a",
        "RecordingDuration": 1021.9996,
        "RecordingType": "continuous",
        "EEGReference": "n/a",
        "EEGGround": "n/a",
        "EEGPlacementScheme": "n/a",
        "EEGChannelCount": 62,
        "EOGChannelCount": 0,
        "ECGChannelCount": 0,
        "EMGChannelCount": 0,
        "MiscChannelCount": 0,
        "TriggerChannelCount": 0
    }

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010002\eeg\sub-010002_task-resting_channels.tsv'...

    name    type    units   low_cutoff      high_cutoff     description     sampling_frequency      status  status_description
    Fp1     EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    Fp2     EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    F7      EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    F3      EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    Fz      EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    Copying data files to sub-010002_task-resting_eeg.vhdr

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010002\sub-010002_scans.tsv'...

    filename        acq_time
    eeg/sub-010002_task-resting_eeg.vhdr    2013-11-11T13:47:40.346211Z
    Wrote y:\code\sovabids\_data\lemon_bids\sub-010002\sub-010002_scans.tsv entry with eeg\sub-010002_task-resting_eeg.vhdr.
    <Info | 8 non-empty values
     bads: []
     ch_names: Fp1, Fp2, F7, F3, Fz, F4, F8, FC5, FC1, FC2, FC6, T7, C3, Cz, ...
     chs: 62 EEG
     custom_ref_applied: False
     highpass: 0.0 Hz
     line_freq: 50
     lowpass: 1000.0 Hz
     meas_date: 2013-09-10 10:58:55 UTC
     nchan: 62
     projs: []
     sfreq: 2500.0 Hz
    >

    Writing 'y:\code\sovabids\_data\lemon_bids\participants.tsv'...

    participant_id  age     sex     hand
    sub-010002      n/a     n/a     n/a
    sub-010003      n/a     n/a     n/a

    Writing 'y:\code\sovabids\_data\lemon_bids\participants.json'...

    {
        "participant_id": {
            "Description": "Unique participant identifier"
        },
        "age": {
            "Description": "Age of the participant at time of testing",
            "Units": "years"
        },
        "sex": {
            "Description": "Biological sex of the participant",
            "Levels": {
                "F": "female",
                "M": "male"
            }
        },
        "hand": {
            "Description": "Handedness of the participant",
            "Levels": {
                "R": "right",
                "L": "left",
                "A": "ambidextrous"
            }
        }
    }

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010003\eeg\sub-010003_task-resting_events.tsv'...

    onset   duration        trial_type      value   sample
    0.0     0.0004  New Segment/    2       0
    0.0     0.0004  Comment/no USB Connection to actiCAP    1       0
    10.0988 0.0004  Stimulus/S  1   3       25247
    13.0396 0.0004  Stimulus/S  1   3       32599
    13.0488 0.0004  Stimulus/S210   5       32622

    Writing 'y:\code\sovabids\_data\lemon_bids\dataset_description.json'...

    {
        "Name": " ",
        "BIDSVersion": "1.4.0",
        "DatasetType": "raw",
        "Authors": [
            "Please cite MNE-BIDS in your publication before removing this (citations in README)"
        ]
    }

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010003\eeg\sub-010003_task-resting_eeg.json'...

    {
        "TaskName": "resting",
        "Manufacturer": "BrainProducts",
        "PowerLineFrequency": 50,
        "SamplingFrequency": 2500.0,
        "SoftwareFilters": "n/a",
        "RecordingDuration": 1007.9396,
        "RecordingType": "continuous",
        "EEGReference": "n/a",
        "EEGGround": "n/a",
        "EEGPlacementScheme": "n/a",
        "EEGChannelCount": 62,
        "EOGChannelCount": 0,
        "ECGChannelCount": 0,
        "EMGChannelCount": 0,
        "MiscChannelCount": 0,
        "TriggerChannelCount": 0
    }

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010003\eeg\sub-010003_task-resting_channels.tsv'...

    name    type    units   low_cutoff      high_cutoff     description     sampling_frequency      status  status_description
    Fp1     EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    Fp2     EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    F7      EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    F3      EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    Fz      EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    Copying data files to sub-010003_task-resting_eeg.vhdr

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010003\sub-010003_scans.tsv'...

    filename        acq_time
    eeg/sub-010003_task-resting_eeg.vhdr    2013-09-10T10:58:55.350974Z
    Wrote y:\code\sovabids\_data\lemon_bids\sub-010003\sub-010003_scans.tsv entry with eeg\sub-010003_task-resting_eeg.vhdr.
    <Info | 8 non-empty values
     bads: []
     ch_names: Fp1, Fp2, F7, F3, Fz, F4, F8, FC5, FC1, FC2, FC6, T7, C3, Cz, ...
     chs: 62 EEG
     custom_ref_applied: False
     highpass: 0.0 Hz
     line_freq: 50
     lowpass: 1000.0 Hz
     meas_date: 2013-11-15 13:54:17 UTC
     nchan: 62
     projs: []
     sfreq: 2500.0 Hz
    >

    Writing 'y:\code\sovabids\_data\lemon_bids\participants.tsv'...

    participant_id  age     sex     hand
    sub-010002      n/a     n/a     n/a
    sub-010003      n/a     n/a     n/a
    sub-010004      n/a     n/a     n/a

    Writing 'y:\code\sovabids\_data\lemon_bids\participants.json'...

    {
        "participant_id": {
            "Description": "Unique participant identifier"
        },
        "age": {
            "Description": "Age of the participant at time of testing",
            "Units": "years"
        },
        "sex": {
            "Description": "Biological sex of the participant",
            "Levels": {
                "F": "female",
                "M": "male"
            }
        },
        "hand": {
            "Description": "Handedness of the participant",
            "Levels": {
                "R": "right",
                "L": "left",
                "A": "ambidextrous"
            }
        }
    }

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010004\eeg\sub-010004_task-resting_events.tsv'...

    onset   duration        trial_type      value   sample
    0.0     0.0004  New Segment/    2       0
    0.0     0.0004  Comment/actiCAP Data On 1       0
    7.1968  0.0004  Stimulus/S  1   3       17992
    10.3628 0.0004  Stimulus/S  1   3       25907
    10.372  0.0004  Stimulus/S210   5       25930

    Writing 'y:\code\sovabids\_data\lemon_bids\dataset_description.json'...

    {
        "Name": " ",
        "BIDSVersion": "1.4.0",
        "DatasetType": "raw",
        "Authors": [
            "Please cite MNE-BIDS in your publication before removing this (citations in README)"
        ]
    }

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010004\eeg\sub-010004_task-resting_eeg.json'...

    {
        "TaskName": "resting",
        "Manufacturer": "BrainProducts",
        "PowerLineFrequency": 50,
        "SamplingFrequency": 2500.0,
        "SoftwareFilters": "n/a",
        "RecordingDuration": 1022.0396,
        "RecordingType": "continuous",
        "EEGReference": "n/a",
        "EEGGround": "n/a",
        "EEGPlacementScheme": "n/a",
        "EEGChannelCount": 62,
        "EOGChannelCount": 0,
        "ECGChannelCount": 0,
        "EMGChannelCount": 0,
        "MiscChannelCount": 0,
        "TriggerChannelCount": 0
    }

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010004\eeg\sub-010004_task-resting_channels.tsv'...

    name    type    units   low_cutoff      high_cutoff     description     sampling_frequency      status  status_description
    Fp1     EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    Fp2     EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    F7      EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    F3      EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    Fz      EEG     ÂµV      0.015915494309189534    1000.0  ElectroEncephaloGram    2500.0  good    n/a
    Copying data files to sub-010004_task-resting_eeg.vhdr

    Writing 'y:\code\sovabids\_data\lemon_bids\sub-010004\sub-010004_scans.tsv'...

    filename        acq_time
    eeg/sub-010004_task-resting_eeg.vhdr    2013-11-15T13:54:17.255858Z
    Wrote y:\code\sovabids\_data\lemon_bids\sub-010004\sub-010004_scans.tsv entry with eeg\sub-010004_task-resting_eeg.vhdr.




.. GENERATED FROM PYTHON SOURCE LINES 149-152

Checking the conversion
-----------------------
For clarity purposes we will check the output directory we got from sovabids.

.. GENERATED FROM PYTHON SOURCE LINES 152-157

.. code-block:: default


    print_dir_tree(bids_root)

    print('LEMON CONVERSION FINISHED!')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    |lemon_bids\
    |--- README
    |--- dataset_description.json
    |--- participants.json
    |--- participants.tsv
    |--- code\
    |------ sovabids\
    |--------- mappings.yml
    |--- sub-010002\
    |------ sub-010002_scans.tsv
    |------ eeg\
    |--------- sub-010002_task-resting_channels.tsv
    |--------- sub-010002_task-resting_eeg.eeg
    |--------- sub-010002_task-resting_eeg.json
    |--------- sub-010002_task-resting_eeg.vhdr
    |--------- sub-010002_task-resting_eeg.vmrk
    |--------- sub-010002_task-resting_events.tsv
    |--- sub-010003\
    |------ sub-010003_scans.tsv
    |------ eeg\
    |--------- sub-010003_task-resting_channels.tsv
    |--------- sub-010003_task-resting_eeg.eeg
    |--------- sub-010003_task-resting_eeg.json
    |--------- sub-010003_task-resting_eeg.vhdr
    |--------- sub-010003_task-resting_eeg.vmrk
    |--------- sub-010003_task-resting_events.tsv
    |--- sub-010004\
    |------ sub-010004_scans.tsv
    |------ eeg\
    |--------- sub-010004_task-resting_channels.tsv
    |--------- sub-010004_task-resting_eeg.eeg
    |--------- sub-010004_task-resting_eeg.json
    |--------- sub-010004_task-resting_eeg.vhdr
    |--------- sub-010004_task-resting_eeg.vmrk
    |--------- sub-010004_task-resting_events.tsv
    LEMON CONVERSION FINISHED!





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  15.748 seconds)


.. _sphx_glr_download_auto_examples_lemon_example.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: lemon_example.py <lemon_example.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: lemon_example.ipynb <lemon_example.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
